
    server {
         listen 80;
         server_name onlineshop.com;
         client_body_buffer_size 16K;
         client_max_body_size 10M;
    # Перенаправление всех HTTP-запросов на HTTPS
        return 301 https://$host$request_uri;
}

    
    server {
        listen 443 ssl;
        server_name onlineshop-api.com;
        client_body_buffer_size 16K;
        client_max_body_size 20M; 
        ssl_certificate /etc/nginx/certs/server.crt;
        ssl_certificate_key /etc/nginx/certs/server.key;

        gzip on;                           # Включить сжатие Gzip
        gzip_disable "msie6";              # Отключить Gzip для старых версий IE

        gzip_vary on;                      # Отправить заголовок Vary: Accept-Encoding
        gzip_proxied any;                  # Включить сжатие для проксированных запросов
        gzip_comp_level 6;                 # Уровень сжатия (от 1 до 9, где 9 — максимальное сжатие)
        gzip_buffers 16 8k;                # Размер буферов для сжатых данных
        gzip_http_version 1.1;             # Минимальная версия HTTP для сжатия
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript; # Типы файлов для сжатия


    # SSL настройки
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        root   /usr/share/nginx/html;
        index  index.html index.htm;
   

        location / {            
          
     
            try_files $uri $uri/ /index.html;
        }


        location /admin {
            add_header X-CSRFToken $http_cookie_csrftoken;
            proxy_pass http://backend:8080/admin;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;
            proxy_redirect off;
            if (!-f $request_filename) {
                proxy_pass http://backend:8080;
                break;
            }
        }
           location /api {
            add_header X-CSRFToken $http_cookie_csrftoken;
            proxy_pass http://backend:8080/api;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;
            proxy_redirect off;
            if (!-f $request_filename) {
                proxy_pass http://backend:8080;
                break;
            }
        }
        
        location /static/ {
           alias /static/;
           types { text/css css;
                    }
        }
        location /media/ {
        alias /media/;        
        }

    }
